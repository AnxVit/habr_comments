package interfaces

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"net/http"

	"github.com/AnxVit/ozon_1/api/graphQL/models"
	"github.com/AnxVit/ozon_1/internal/logger"
)

// CreateComment is the resolver for the CreateComment field.
func (r *mutationResolver) CreateComment(ctx context.Context, postID *string, parendID *string, comment models.CommentInput) (*models.CommentResponse, error) {
	if parendID == nil && postID == nil {
		logger.Get().Info("not set parent item of commet")
		return &models.CommentResponse{
			Message: "Not set parent item of commet",
			Status:  http.StatusBadRequest,
		}, nil
	}
	com := &models.Comment{
		Content:         comment.Content,
		Author:          comment.Author,
		ParentCommentID: parendID,
	}

	err := r.HabrService.CreateComment(ctx, postID, com)
	if err != nil {
		logger.Get().Error("ERROR:", err)
		return &models.CommentResponse{
			Message: "Failed to create comment",
			Status:  http.StatusInternalServerError,
		}, nil
	}

	return &models.CommentResponse{
		Message: "Successfully created comment",
		Status:  http.StatusCreated,
	}, nil
}
