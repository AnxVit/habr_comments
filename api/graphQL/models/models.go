// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type Comment struct {
	ID              string     `json:"id" db:"id"`
	Content         string     `json:"content" db:"content"`
	Author          string     `json:"author" db:"author"`
	ParentCommentID *string    `json:"parentCommentId,omitempty" db:"parentCommentId"`
	Replies         []*Comment `json:"replies,omitempty" db:"replies"`
}

type CommentInput struct {
	Author  string `json:"author" db:"author"`
	Content string `json:"content" db:"content"`
}

type CommentResponse struct {
	Message string `json:"message" db:"message"`
	Status  int    `json:"status" db:"status"`
}

type Mutation struct {
}

type Post struct {
	ID        string     `json:"id" db:"id"`
	Author    string     `json:"author" db:"author"`
	Title     string     `json:"title" db:"title"`
	Content   string     `json:"content" db:"content"`
	CreatedAt time.Time  `json:"createdAt" db:"createdAt"`
	UpdatedAt time.Time  `json:"updatedAt" db:"updatedAt"`
	Commented bool       `json:"commented" db:"commented"`
	Comments  []*Comment `json:"comments,omitempty" db:"comments"`
}

type PostInput struct {
	Title     string `json:"title" db:"title"`
	Content   string `json:"content" db:"content"`
	Author    string `json:"author" db:"author"`
	Commented *bool  `json:"commented,omitempty" db:"commented"`
}

type PostResponse struct {
	Message  string  `json:"message" db:"message"`
	Status   int     `json:"status" db:"status"`
	Data     *Post   `json:"data,omitempty" db:"data"`
	ID       *string `json:"id,omitempty" db:"id"`
	DataList []*Post `json:"dataList,omitempty" db:"dataList"`
}

type Query struct {
}
